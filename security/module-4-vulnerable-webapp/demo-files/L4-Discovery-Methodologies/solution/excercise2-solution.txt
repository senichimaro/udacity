Scan results:
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'root'
OSWASP: A6:2017-Security Misconfiguration
Severity: Medium
Location: Training/exercise.py:13
12	
13	def doLogin2(password='root'):
14	    if password == 'root':
15	        print("YES")
16	    else:
17	        print("NO, :(")
18	
19	def createUser(username, password='pasword'):

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'pasword'
OSWASP: A6:2017-Security Misconfiguration
Severity: Medium
Location: Training/exercise.py:19
18	
19	def createUser(username, password='pasword'):
20	    user = User(username, password)
21	    user.process()
22	
23	
24	class User(db.Model):

--------------------------------------------------
>> Issue: [B303:blacklist] Use of insecure MD2, MD4, MD5, or SHA1 hash function.
OSWASP:  A3:2017-Sensitive Data Exposure
Severity: Medium
Location: Training/exercise.py:32
31	        self.username = username
32	        self.password = hashlib.md5(password.encode('utf-8')).hexdigest()
33	        self.resetcode = ''.join(random.choice(string.ascii_lowercase) for i in range(16))

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
OSWASP: FALSEPOSITIVE
Severity: FALSEPOSITIVE
Location: Training/exercise.py:33
32	        self.password = hashlib.md5(password.encode('utf-8')).hexdigest()
33	        self.resetcode = ''.join(random.choice(string.ascii_lowercase) for i in range(16))
34	

--------------------------------------------------
